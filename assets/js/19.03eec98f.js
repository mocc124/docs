(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{300:function(t,_,r){"use strict";r.r(_);var v=r(12),a=Object(v.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"前端工程化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端工程化"}},[t._v("#")]),t._v(" 前端工程化")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://woai3c.github.io/introduction-to-front-end-engineering/",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文连接"),_("OutboundLink")],1)]),t._v(" "),_("h2",{attrs:{id:"简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),_("p",[t._v("在学习之前我们需要了解 一个项目的生命周期：")]),t._v(" "),_("ul",[_("li",[t._v("接到新需求，进行需求评审后根据具体情况做技术选型。")]),t._v(" "),_("li",[t._v("开发前需要统一规范。")]),t._v(" "),_("li",[t._v("学会模块化、组件化，对于写代码很有好处。")]),t._v(" "),_("li",[t._v("开发完，需要对代码进行测试。")]),t._v(" "),_("li",[t._v("构建打包。")]),t._v(" "),_("li",[t._v("部署上线。")]),t._v(" "),_("li",[t._v("对项目进行监控，随时发现问题。")]),t._v(" "),_("li",[t._v("根据项目运行情况决定是否要做性能优化。")]),t._v(" "),_("li",[t._v("项目越来越复杂，需要重构以提高可维护性。")]),t._v(" "),_("li",[t._v("项目越来越大，可以考虑是否用微服务对其进行拆分。")]),t._v(" "),_("li",[t._v("不想自己管理服务器或数据库，可以考虑使用 Serverless。")])]),t._v(" "),_("p",[t._v("扩展内容：\n"),_("a",{attrs:{href:""}},[t._v("手把手教你写一个脚手架")]),t._v(" "),_("a",{attrs:{href:""}},[t._v("深入了解 webpack 模块加载原理")]),t._v(" "),_("a",{attrs:{href:""}},[t._v("实现一个 webpack loader 和 webpack plugin")]),t._v(" "),_("a",{attrs:{href:""}},[t._v("从 rollup 初版源码学习打包原理")])]),t._v(" "),_("h2",{attrs:{id:"_1-技术选型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-技术选型"}},[t._v("#")]),t._v(" 1. 技术选型")]),t._v(" "),_("p",[t._v("技术选型的范围：技术框架、编程语言，还是小到工具库的选择，都属于技术选型的范围，一般要考虑兼容、高效、稳定、可控的特点来选取。")]),t._v(" "),_("p",[t._v("可控（优先考虑）：如果因为采用了某项技术产生的 BUG 对项目造成了影响，团队中有人能够解决它，而不是等待官方修复。\n稳定：一门技术更新迭代稳定，可以向后兼容，这就意味着项目迁移简单、成本小。因此我们一般采用新技术是在非核心项目。\n稳定性考量的一般方法：")]),t._v(" "),_("ul",[_("li",[t._v("社区是否活跃、配套插件是否丰富。")]),t._v(" "),_("li",[t._v("是否经常维护，可以通过 git commit 查看。")]),t._v(" "),_("li",[t._v("官方文档是否齐全。")]),t._v(" "),_("li",[t._v("更新是稳定、小步的迭代，而不是非常激进的更新。\n高效性：根据业务场景和团队成员的技术栈来选择技术。\n适用性：")])]),t._v(" "),_("p",[t._v("项目的生命周期一般分为长期维护的核心项目和其它项目，")]),t._v(" "),_("p",[t._v("需要长期维护的核心项目。它们需要使用成熟稳定的技术栈，在开发语言上也要使用 TypeScript 而不是 JavaScript。\n其它项目，如节假日特定的活动页面，生命周期只有一两天。这种页面就算用 JQuery 写也是可以的，唯一的要求就是快。")]),t._v(" "),_("p",[t._v("web 项目需要考虑不同浏览器的兼容性，app 需要考虑 IOS 和 Android 的兼容性。\n除了必须保证不能有死机、白屏、卡顿等明显 BUG 外，样式也需要尽量保持终端风格一致。")]),t._v(" "),_("h3",{attrs:{id:"_3-团队成员"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-团队成员"}},[t._v("#")]),t._v(" 3. 团队成员")]),t._v(" "),_("p",[t._v("团队成员不一定所有人都使用相同的技术栈，建议尽量将团队成员的权重放到比较低的位置，选择约束性比较强的技术是一个更好的选择 （如果团队成员不会，就让他学）。\n要用长远的眼光来为团队考虑，太过自由的技术，往往会造成灾难。如使用 TypeScript 已经被很多大公司和开源项目证明过是一个更好的选择。")]),t._v(" "),_("h3",{attrs:{id:"_4-易用性-学习路线"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-易用性-学习路线"}},[t._v("#")]),t._v(" 4. 易用性/学习路线")]),t._v(" "),_("p",[t._v("最典型的是Vue和Angular，Angular 学习曲线陡峭，而 Vue 在熟练掌握 JavaScript 的情况下，看文档一两天就能上手干活。\n易用性也决定了你的团队好不好招人，这一点对小公司和非一线城市的公司来说非常重要。")]),t._v(" "),_("p",[t._v("推荐阅读："),_("a",{attrs:{href:"https://juejin.cn/post/6844903815846576136#heading-7",target:"_blank",rel:"noopener noreferrer"}},[t._v("技术选型指南"),_("OutboundLink")],1)]),t._v(" "),_("h2",{attrs:{id:""}},[_("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])])])}),[],!1,null,null,null);_.default=a.exports}}]);